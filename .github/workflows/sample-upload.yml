name: Main Workflow

on:
  push:
    branches: [ master ]

jobs:
  
  run-ci:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install
    - run: npm run lint
    - run: make
  
  upload-artifact:
    name: Upload Artifact
    runs-on: ubuntu-latest
    needs: run-ci
    steps:
      - name: Create a new Directory to store the downloaded artifacts
        run: mkdir downloadArtifacts
      
      - name: Add Artifacts to the downloadArtifacts directory
        run : |
          echo 'Go inside downloadArtifacts'
          cd downloadArtifacts
          echo 'Make libs directory'
          mkdir libs
          echo 'Copy the files'
          cp \build/app.bundle.min.js \build/app.bundle.min.map \build/do_external_connect.min.js \build/do_external_connect.min.map \build/external_api.min.js \build/external_api.min.map \build/flacEncodeWorker.min.js \build/flacEncodeWorker.min.map \build/device_selection_popup_bundle.min.js \build/device_selection_popup_bundle.min.map \build/dial_in_info_bundle.min.js \build/dial_in_info_bundle.min.map \build/alwaysontop.min.js \build/alwaysontop.min.map \./analytics-ga.js \build/analytics-ga.min.js \build/analytics-ga.min.map \build/video-blur-effect.min.js \build/video-blur-effect.min.map \build/rnnoise-processor.min.js \build/rnnoise-processor.min.map \build/close3.min.js \build/close3.min.map \libs
          cp \node_modules/rnnoise-wasm/dist//rnnoise.wasm \libs libs
          cp \node_modules/lib-jitsi-meet//lib-jitsi-meet.min.js \node_modules/lib-jitsi-meet//lib-jitsi-meet.min.map \node_modules/lib-jitsi-meet//lib-jitsi-meet.e2ee-worker.js \node_modules/lib-jitsi-meet//connection_optimization/external_connect.js \node_modules/lib-jitsi-meet//modules/browser/capabilities.json \libs
          cp \node_modules/libflacjs/dist/min//libflac4-1.3.2.min.js \node_modules/libflacjs/dist/min//libflac4-1.3.2.min.js.mem \libs libs
          cp \node_modules/olm/olm.wasm \libs libs
          cp all.bundle.css
          cd ..
        
      - name: Use the upload artifact action
        uses: actions/upload-artifact@v2
        with:
          name: download-build-files
          path: downloadArtifacts
